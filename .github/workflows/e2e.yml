name: Cypress

on:
  push:
    paths:
      - '**/**.js'
      - '**/**.vue'
      - '**/**.js.snap'
      - '.github/workflows/e2e.yml'

env:
  CI: 1
  VUE_APP_WHAT_3_WORDS_API_KEY: ${{ secrets.VUE_APP_WHAT_3_WORDS_API_KEY }}
  VUE_APP_GOOGLE_MAPS_API_KEY: ${{ secrets.VUE_APP_GOOGLE_MAPS_API_KEY }}
  VUE_APP_PITNEYBOWES_API_KEY: ${{ secrets.VUE_APP_PITNEYBOWES_API_KEY }}
  VUE_APP_PITNEYBOWES_BASIC_AUTH_TOKEN: ${{ secrets.VUE_APP_PITNEYBOWES_BASIC_AUTH_TOKEN }}
  VUE_APP_AWS_CCP_REGION: 'us-east-1'
  VUE_APP_CCP_PRINCIPAL: 'arn:aws:iam::240937704012:saml-provider/ccudev'
  VUE_APP_CCP_ROLE: 'arn:aws:iam::240937704012:role/CCUDevConnectRole'
  VUE_APP_CCP_INSTANCE: 89c1729b-4547-4548-9508-9365b71e586b
  VUE_APP_AWS_CCP_URL: https://ccuhotlinedev.awsapps.com/connect/ccp#
  VUE_APP_API_BASE_URL: 'http://localhost:5000'
  VUE_APP_BASE_URL: 'http://localhost:8080'
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  ECR_REGISTRY: 182237011124.dkr.ecr.us-east-2.amazonaws.com
  IMAGE_TAG: latest

jobs:
  cypress:
    name: E2E // Cypress
    runs-on: ubuntu-16.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        # run 3 instances of cypress in parallel
        containers: [1, 2, 3]
    steps:
      - uses: actions/checkout@v2

      - name: Determine Yarn Cache
        id: yarn-cache-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Node Modules
        uses: actions/cache@v2.1.0
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-path.outputs.dir }}
          key: yarn-e2e-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-e2e-

      - name: Checkout Api
        uses: actions/checkout@v2
        with:
          repository: 'CrisisCleanup/crisiscleanup-3-api'
          path: 'cc3api'
          token: ${{ secrets.GITHUB_PAT }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ secrets.aws_default_region }}

      - name: Login to ECR
        env:
          ECR_REPOSITORY: python-base
        uses: aws-actions/amazon-ecr-login@v1

      - name: Login to ECR
        env:
          ECR_REPOSITORY: cc3api-dev
        uses: aws-actions/amazon-ecr-login@v1

      - name: Spin up Api
        run: |
          cd "$GITHUB_WORKSPACE/cc3api"
          echo "CI=1" >> "$GITHUB_WORKSPACE/cc3api/compose/envs/.env-dev"
          docker-compose up -d --build app

      - name: Install Dependencies
        env:
          CHILD_CONCURRENCY: 1
        run: yarn install

      - name: Patch Cypress Director
        env:
          SORRY_CYP_API_URL: ${{ secrets.SORRY_CYP_API_URL }}
        run: yarn cy:patch

      - uses: zcong1993/setup-dockerize@v1.2.0

      - name: Wait for Api
        run: 'dockerize -wait-retry-interval 5s -timeout 380s -wait http://localhost:5000/health'

      - name: Dump Api Logs
        run: docker-compose logs

      - name: Run Cypress
        uses: cypress-io/github-action@v2.2.2
        with:
          # skip install now
          install: false
          record: true
          parallel: true
          start: yarn serve
          wait-on: 'http://localhost:8080'
          wait-on-timeout: 360
          browser: chrome
          group: 'CI Chrome'
          headless: true
          env: WEB_USER=${{ secrets.CYPRESS_WEB_USER }},WEB_PASS=${{ secrets.CYPRESS_WEB_PASS }},API_URL=http://localhost:5000
        env:
          VUE_APP_API_BASE_URL: 'http://localhost:5000'
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_WEB_USER: ${{ secrets.CYPRESS_WEB_USER }}
          CYPRESS_WEB_PASS: ${{ secrets.CYPRESS_WEB_PASS }}
          CYPRESS_API_URL: 'http://localhost:5000'
          SORRY_CYP_API_URL: ${{ secrets.SORRY_CYP_API_URL }}
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CHILD_CONCURRENCY: 1
          VUE_APP_AWS_CCP_REGION: 'us-east-1'
          VUE_APP_CCP_PRINCIPAL: 'arn:aws:iam::240937704012:saml-provider/ccudev'
          VUE_APP_CCP_ROLE: 'arn:aws:iam::240937704012:role/CCUDevConnectRole'
          VUE_APP_CCP_INSTANCE: 89c1729b-4547-4548-9508-9365b71e586b
          VUE_APP_AWS_CCP_URL: https://ccuhotlinedev.awsapps.com/connect/ccp#
