name: Cypress

on:
  push:
    paths:
      - '**/**.js'
      - '**/**.vue'
      - '**/**.js.snap'
      - '.github/workflows/e2e.yml'

env:
  CI: 1
  VUE_APP_WHAT_3_WORDS_API_KEY: ${{ secrets.VUE_APP_WHAT_3_WORDS_API_KEY }}
  VUE_APP_GOOGLE_MAPS_API_KEY: ${{ secrets.VUE_APP_GOOGLE_MAPS_API_KEY }}
  VUE_APP_PITNEYBOWES_API_KEY: ${{ secrets.VUE_APP_PITNEYBOWES_API_KEY }}
  VUE_APP_PITNEYBOWES_BASIC_AUTH_TOKEN: ${{ secrets.VUE_APP_PITNEYBOWES_BASIC_AUTH_TOKEN }}
  VUE_APP_AWS_CCP_REGION: 'us-east-1'
  VUE_APP_CCP_PRINCIPAL: 'arn:aws:iam::240937704012:saml-provider/ccudev'
  VUE_APP_CCP_ROLE: 'arn:aws:iam::240937704012:role/CCUDevConnectRole'
  VUE_APP_CCP_INSTANCE: 89c1729b-4547-4548-9508-9365b71e586b
  VUE_APP_AWS_CCP_URL: https://cchotline.awsapps.com/connect/ccp#
  VUE_APP_API_BASE_URL: 'http://localhost:5000'
  VUE_APP_BASE_URL: 'http://localhost:8080'
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

jobs:
  build_id:
    name: E2E // Build ID
    runs-on: ubuntu-16.04
    steps:
      - name: Set Build ID
        id: build_id
        run: echo "::set-output name=id::$(date +%s)"

      - name: Cache Build ID
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.build-id
          # use build id for unique cache
          key: ${{ runner.os }}-build-id-${{ github.head_ref }}-${{ github.sha }}-${{ steps.build_id.outputs.id }}

      - name: Save Build ID
        run: |
          mkdir -p "$BUILD_DIR"
          echo "$BUILD_ID" > "$BUILD_PATH"
        env:
          BUILD_ID: ${{ steps.build_id.outputs.id }}
          BUILD_DIR: ${{ github.workspace }}/.build-id
          BUILD_PATH: ${{ github.workspace }}/.build-id/id

  cypress:
    name: E2E // Cypress
    runs-on: ubuntu-16.04
    strategy:
      fail-fast: false
      matrix:
        # run 3 instances of cypress in parallel
        containers: [1, 2, 3]
    steps:
      - uses: actions/checkout@v2

      - name: Cache Build ID
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.build-id
          # unique build ID
          key: ${{ runner.os }}-build-id-${{ github.head_ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-id-${{ github.head_ref }}-${{ github.sha }}

      - name: Set Build ID
        id: build_id
        run: echo "::set-output name=id::$(cat .build-id/id)"

      - name: Checkout Api
        uses: actions/checkout@v2
        with:
          repository: 'CrisisCleanup/crisiscleanup-3-api'
          path: 'cc3api'
          token: ${{ secrets.GITHUB_PAT }}

      - name: Spin up Api
        run: |
          echo ${{ secrets.GITHUB_PAT }} | docker login docker.pkg.github.com -u ${{ secrets.GITHUB_PAT_USER }} --password-stdin
          cd "$GITHUB_WORKSPACE/cc3api"
          echo "CI=1" >> "$GITHUB_WORKSPACE/cc3api/compose/envs/.env-dev"
          docker-compose up -d --build app

      - name: Install Dependencies
        env:
          CHILD_CONCURRENCY: 1
        run: yarn install

      - name: Patch Cypress Director
        env:
          SORRY_CYP_API_URL: ${{ secrets.SORRY_CYP_API_URL }}
        run: yarn cy:patch

      - uses: zcong1993/setup-dockerize@v1.2.0

      - name: Wait for Api
        run: 'dockerize -wait-retry-interval 5s -timeout 240s -wait http://localhost:5000/health'

      - name: Create Test User
        run: docker-compose exec app create_test_user

      - name: Dump Api Logs
        run: docker-compose logs

      - name: Run Cypress
        uses: cypress-io/github-action@v1.23.2
        with:
          # skip install now
          install: false
          record: true
          parallel: true
          start: yarn serve
          wait-on: 'http://localhost:8080'
          wait-on-timeout: 240
          browser: chrome
          group: 'CI Chrome'
          headless: true
          ci-build-id: ${{ steps.build_id.outputs.id }}
          env: WEB_USER=${{ secrets.CYPRESS_WEB_USER }},WEB_PASS=${{ secrets.CYPRESS_WEB_PASS }},API_URL=http://localhost:5000
        env:
          VUE_APP_API_BASE_URL: 'http://localhost:5000'
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_WEB_USER: ${{ secrets.CYPRESS_WEB_USER }}
          CYPRESS_WEB_PASS: ${{ secrets.CYPRESS_WEB_PASS }}
          CYPRESS_API_URL: 'http://localhost:5000'
          SORRY_CYP_API_URL: ${{ secrets.SORRY_CYP_API_URL }}
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CHILD_CONCURRENCY: 1
          VUE_APP_AWS_CCP_REGION: 'us-east-1'
          VUE_APP_CCP_PRINCIPAL: 'arn:aws:iam::240937704012:saml-provider/ccudev'
          VUE_APP_CCP_ROLE: 'arn:aws:iam::240937704012:role/CCUDevConnectRole'
          VUE_APP_CCP_INSTANCE: 89c1729b-4547-4548-9508-9365b71e586b
          VUE_APP_AWS_CCP_URL: https://cchotline.awsapps.com/connect/ccp#
