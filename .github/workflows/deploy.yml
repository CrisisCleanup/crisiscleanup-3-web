name: Deploy

on:
  workflow_dispatch:
    inputs:
      stage:
        description: 'App stage to deploy (development|staging|production).'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production

jobs:
  deploy:
    name: Deploy Site
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Notify Deploy
        if: "github.event.inputs.stage == 'staging' || github.event.inputs.stage == 'production'"
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON: ${{ secrets.SLACK_ICON }}
          SLACK_CHANNEL: 'core'
          SLACK_USERNAME: 'CrisisCleanup Bot'
          SLACK_COLOR: '#fece09'
          SLACK_TITLE: 'New Release'
          SLACK_MESSAGE: "Heads up, I'm currently releasing to ${{ github.event.inputs.stage }}! You can watch my progress at the url above."

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Setup Common Env
        run: |
          echo "BUILD_DATE=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
          echo "GIT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
          echo "GIT_REF=$(git symbolic-ref -q --short HEAD || git describe --tags --exact-match)" >> $GITHUB_ENV
          echo "BUILD_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
          echo "IMAGE=${{ steps.login-ecr.outputs.registry }}/crisiscleanup-web" >> $GITHUB_ENV

      - name: Setup Development Env
        if: github.event.inputs.stage == 'development'
        run: |
          echo "VITE_APP_API_BASE_URL=https://api.dev.crisiscleanup.io" >> $GITHUB_ENV
          echo "VITE_APP_BASE_URL=https://app.dev.crisiscleanup.io" >> $GITHUB_ENV
          echo "VITE_APP_WS_URL=wss://socket.dev.crisiscleanup.io" >> $GITHUB_ENV
          echo "VITE_APP_AWS_CCP_URL=https://ccudev.awsapps.com/connect/ccp-v2/" >> $GITHUB_ENV
          echo "VITE_APP_CCP_INSTANCE=87fbcad4-9f58-4153-84e8-d5b7202693e8" >> $GITHUB_ENV
          echo "VITE_APP_STAGE=development" >> $GITHUB_ENV
          echo "VITE_APP_PORTAL_KEY=crisiscleanup_demo" >> $GITHUB_ENV
          echo "VITE_APP_PHONE_DEFAULT_USERNAME=english" >> $GITHUB_ENV
          echo "VITE_APP_PHONE_DEFAULT_PASSWORD=volunteer" >> $GITHUB_ENV
          echo "VITE_APP_ENGLISH_PHONE_GATEWAY=216961" >> $GITHUB_ENV
          echo "VITE_APP_SPANISH_PHONE_GATEWAY=216962" >> $GITHUB_ENV
          echo "VITE_APP_DEFAULT_CALLER_ID=2722003211" >> $GITHUB_ENV
          echo "VITE_APP_CRISISCLEANUP_WEB_CLIENT_ID=WHrBBfxA5AQ0gWFeYc24x1hFDBmkQk4bYHutOYT5" >> $GITHUB_ENV
          echo "NODE_ENV=development" >> $GITHUB_ENV

      - name: Setup Staging Env
        if: github.event.inputs.stage == 'staging'
        run: |
          echo "VITE_APP_API_BASE_URL=https://api.staging.crisiscleanup.io" >> $GITHUB_ENV
          echo "VITE_APP_BASE_URL=https://app.staging.crisiscleanup.io" >> $GITHUB_ENV
          echo "VITE_APP_WS_URL=wss://socket.staging.crisiscleanup.io" >> $GITHUB_ENV
          echo "VITE_APP_STAGE=staging" >> $GITHUB_ENV
          echo "VITE_APP_AWS_CCP_URL=https://ccustaging.awsapps.com/connect/ccp-v2/" >> $GITHUB_ENV
          echo "VITE_APP_PORTAL_KEY=crisiscleanup_staging" >> $GITHUB_ENV
          echo "VITE_APP_CCP_INSTANCE=414df788-cd99-4580-ad07-f8af22246ce5" >> $GITHUB_ENV
          echo "VITE_APP_PHONE_DEFAULT_USERNAME=english" >> $GITHUB_ENV
          echo "VITE_APP_PHONE_DEFAULT_PASSWORD=volunteer" >> $GITHUB_ENV
          echo "VITE_APP_ENGLISH_PHONE_GATEWAY=124906" >> $GITHUB_ENV
          echo "VITE_APP_SPANISH_PHONE_GATEWAY=124906" >> $GITHUB_ENV
          echo "VITE_APP_DEFAULT_CALLER_ID=2722003211" >> $GITHUB_ENV
          echo "VITE_APP_CRISISCLEANUP_WEB_CLIENT_ID=bHQe6Lk69j9sTbVnOCSjpNJisN4bNMuS7VA8jkNp" >> $GITHUB_ENV
          echo "NODE_ENV=production" >> $GITHUB_ENV

      - name: Setup Production Env
        if: github.event.inputs.stage == 'production'
        run: |
          echo "VITE_APP_API_BASE_URL=https://api.crisiscleanup.org" >> $GITHUB_ENV
          echo "VITE_APP_BASE_URL=https://crisiscleanup.org" >> $GITHUB_ENV
          echo "VITE_APP_WS_URL=wss://socket.crisiscleanup.org" >> $GITHUB_ENV
          echo "VITE_APP_STAGE=production" >> $GITHUB_ENV
          echo "VITE_APP_AWS_CCP_URL=https://cculive.awsapps.com/connect/ccp-v2/" >> $GITHUB_ENV
          echo "VITE_APP_CCP_INSTANCE=cd54a377-8223-4c43-8524-a21d2837b7c5" >> $GITHUB_ENV
          echo "VITE_APP_PORTAL_KEY=crisiscleanup_us" >> $GITHUB_ENV
          echo "VITE_APP_PHONE_DEFAULT_USERNAME=english" >> $GITHUB_ENV
          echo "VITE_APP_PHONE_DEFAULT_PASSWORD=volunteer" >> $GITHUB_ENV
          echo "VITE_APP_ENGLISH_PHONE_GATEWAY=216961" >> $GITHUB_ENV
          echo "VITE_APP_SPANISH_PHONE_GATEWAY=216962" >> $GITHUB_ENV
          echo "VITE_APP_DEFAULT_CALLER_ID=2722003211" >> $GITHUB_ENV
          echo "VITE_APP_CRISISCLEANUP_WEB_CLIENT_ID=bHQe6Lk69j9sTbVnOCSjpNJisN4bNMuS7VA8jkNp" >> $GITHUB_ENV
          echo "NODE_ENV=production" >> $GITHUB_ENV

      - name: Create Sentry Release
        uses: tclindner/sentry-releases-action@v1.2.0
        continue-on-error: true
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_PROPERTIES: sentry.properties
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        with:
          tagName: ${{ github.ref }}
          environment: ${{ github.event.inputs.stage }}
          releaseNamePrefix: crisiscleanup-3-web@

      # Installs qemu static binaries so we can emulate
      # an arm64 platform for deployment on graviton instances
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VITE_APP_API_BASE_URL=${{ env.VITE_APP_API_BASE_URL }}
            VITE_APP_BASE_URL=${{ env.VITE_APP_BASE_URL }}
            VITE_APP_WS_URL=${{ env.VITE_APP_WS_URL }}
            VITE_APP_STAGE=${{ env.VITE_APP_STAGE }}
            VITE_APP_AWS_CCP_URL=${{ env.VITE_APP_AWS_CCP_URL }}
            VITE_APP_CCP_INSTANCE=${{ env.VITE_APP_CCP_INSTANCE }}
            VITE_APP_PORTAL_KEY=${{ env.VITE_APP_PORTAL_KEY }}
            NODE_ENV=${{ env.NODE_ENV }}
            VITE_APP_WHAT_3_WORDS_API_KEY=${{ secrets.VITE_APP_WHAT_3_WORDS_API_KEY }}
            VITE_APP_GOOGLE_MAPS_API_KEY=${{ secrets.VITE_APP_GOOGLE_MAPS_API_KEY }}
            VITE_APP_GOOGLE_TRANSLATE_API_KEY=${{ secrets.VITE_APP_GOOGLE_TRANSLATE_API_KEY }}
            VITE_APP_PITNEYBOWES_API_KEY=${{ secrets.VITE_APP_PITNEYBOWES_API_KEY }}
            VITE_APP_PITNEYBOWES_BASIC_AUTH_TOKEN=${{ secrets.VITE_APP_PITNEYBOWES_BASIC_AUTH_TOKEN }}
            VITE_APP_PHONE_DEFAULT_USERNAME=${{ env.VITE_APP_PHONE_DEFAULT_USERNAME }}
            VITE_APP_PHONE_DEFAULT_PASSWORD=${{ env.VITE_APP_PHONE_DEFAULT_PASSWORD }}
            VITE_APP_ENGLISH_PHONE_GATEWAY=${{ env.VITE_APP_ENGLISH_PHONE_GATEWAY }}
            VITE_APP_SPANISH_PHONE_GATEWAY=${{ env.VITE_APP_SPANISH_PHONE_GATEWAY }}
            VITE_APP_DEFAULT_CALLER_ID=${{ env.VITE_APP_DEFAULT_CALLER_ID }}
            VITE_APP_CRISISCLEANUP_WEB_CLIENT_ID=${{ env.VITE_APP_CRISISCLEANUP_WEB_CLIENT_ID }}
            SENTRY_DSN=${{ secrets.SENTRY_DSN }}
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
            SENTRY_PROPERTIES="sentry.properties"
          tags: |
            ${{ env.IMAGE }}:latest
            ${{ env.IMAGE }}:${{ github.event.inputs.stage }}
            ${{ env.IMAGE }}:${{ env.GIT_REF }}
          push: true

      - name: Invoke Web Rollout
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Rollout Deployments
          token: ${{ secrets.GHCR_PAT }}
          repo: CrisisCleanup/crisiscleanup-3-api
          ref: master
          inputs: '{ "stage": "${{ github.event.inputs.stage }}", "targets": "crisiscleanup-web-frontend" }'

      - name: Post Notify Deploy
        if: "github.event.inputs.stage == 'staging' || github.event.inputs.stage == 'production'"
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON: ${{ secrets.SLACK_ICON }}
          SLACK_CHANNEL: 'core'
          SLACK_USERNAME: 'CrisisCleanup Bot'
          SLACK_COLOR: '#fece09'
          SLACK_TITLE: 'Live Release'
          SLACK_MESSAGE: ':rocket: ${{ github.event.inputs.stage }} is live! Check it out at: https://crisiscleanup.org'

      - name: Notify Failed
        if: "(github.event.inputs.stage == 'staging' || github.event.inputs.stage == 'production') && failure()"
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON: ${{ secrets.SLACK_ICON }}
          SLACK_CHANNEL: 'core'
          SLACK_USERNAME: 'CrisisCleanup Bot'
          SLACK_COLOR: '#D94F37'
          SLACK_TITLE: 'Deploy Failed!'
          SLACK_MESSAGE: 'Failed to deploy... someone broke something! :frowning:'
