name: Deploy

on:
  workflow_dispatch:
    inputs:
      stage:
        description: 'App stage to deploy (dev|staging|prod).'
        required: true
        default: 'dev'


env:
  CYPRESS_INSTALL_BINARY: 0


jobs:
  deploy:
    name: Deploy Site
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
      AWS_DEFAULT_REGION: ${{ secrets.aws_default_region }}

    steps:
      - uses: actions/checkout@v2

      - name: Configure Staging AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        if: github.event.inputs.stage == 'staging'
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_STAGING }}
          role-duration-seconds: 1200
          role-session-name: GithubActions
          aws-region: us-east-1

      - name: Configure Prod AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        if: github.event.inputs.stage == 'prod'
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_PROD }}
          role-duration-seconds: 1200
          role-session-name: GithubActions
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Setup Common Env
        run: |
          echo "BUILD_DATE=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
          echo "GIT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
          echo "GIT_REF=$(git symbolic-ref -q --short HEAD || git describe --tags --exact-match)" >> $GITHUB_ENV
          echo "BUILD_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
          echo "IMAGE=${{ steps.login-ecr.outputs.registry }}/crisiscleanup-web" >> $GITHUB_ENV

      - name: Setup Production Env
        if: github.event.inputs.stage == 'prod'
        run: |
          echo "VUE_APP_API_BASE_URL=https://api.staging.crisiscleanup.io" >> $GITHUB_ENV
          echo "VUE_APP_BASE_URL=https://app.staging.crisiscleanup.io" >> $GITHUB_ENV
          echo "VUE_APP_WS_URL=wss://socket.staging.crisiscleanup.io" >> $GITHUB_ENV
          echo "VUE_APP_STAGE=staging" >> $GITHUB_ENV
          echo "VUE_APP_AWS_CCP_URL=https://ccustaging.awsapps.com/connect/ccp-v2/" >> $GITHUB_ENV
          echo "VUE_APP_CCP_INSTANCE=414df788-cd99-4580-ad07-f8af22246ce5" >> $GITHUB_ENV

      - name: Setup Production Env
        if: github.event.inputs.stage == 'prod'
        run: |
          echo "VUE_APP_API_BASE_URL=https://api.crisiscleanup.org" >> $GITHUB_ENV
          echo "VUE_APP_BASE_URL=https://crisiscleanup.org" >> $GITHUB_ENV
          echo "VUE_APP_WS_URL=wss://socket.crisiscleanup.org" >> $GITHUB_ENV
          echo "VUE_APP_STAGE=production" >> $GITHUB_ENV
          echo "VUE_APP_AWS_CCP_URL=https://cculive.awsapps.com/connect/ccp-v2/" >> $GITHUB_ENV
          echo "VUE_APP_CCP_INSTANCE=cd54a377-8223-4c43-8524-a21d2837b7c5" >> $GITHUB_ENV
          echo "VUE_APP_PORTAL_KEY=crisiscleanup_us" >> $GITHUB_ENV

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            VUE_APP_API_BASE_URL=${{ env.VUE_APP_API_BASE_URL }}
            VUE_APP_BASE_URL=${{ env.VUE_APP_BASE_URL }}
            VUE_APP_WS_URL=${{ env.VUE_APP_WS_URL }}
            VUE_APP_STAGE=${{ env.VUE_APP_STAGE }}
            VUE_APP_AWS_CCP_URL=${{ env.VUE_APP_AWS_CCP_URL }}
            VUE_APP_CCP_INSTANCE=${{ env.VUE_APP_CCP_INSTANCE }}
            VUE_APP_PORTAL_KEY=${{ env.VUE_APP_PORTAL_KEY }}
            VUE_APP_WHAT_3_WORDS_API_KEY=${{ secrets.VUE_APP_WHAT_3_WORDS_API_KEY }}
            VUE_APP_GOOGLE_MAPS_API_KEY=${{ secrets.VUE_APP_GOOGLE_MAPS_API_KEY }}
            VUE_APP_PITNEYBOWES_API_KEY=${{ secrets.VUE_APP_PITNEYBOWES_API_KEY }}
            VUE_APP_PITNEYBOWES_BASIC_AUTH_TOKEN=${{ secrets.VUE_APP_PITNEYBOWES_BASIC_AUTH_TOKEN }}
            SENTRY_DSN=${{ secrets.SENTRY_DSN }}
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
            SENTRY_PROPERTIES="sentry.properties"
          tags: |
            ${{ env.IMAGE }}:latest
            ${{ env.IMAGE }}:${{ github.event.inputs.stage }}
            ${{ env.IMAGE }}:${{ env.GIT_REF }}
          push: true
