name: Main

on:
  push:
    branches:
      - main
      - master

  pull_request:
    branches:
      - main
      - master

jobs:
  versions:
    name: Get Versions 📜
    uses: CrisisCleanup/crisiscleanup-4-web/.github/workflows/get-versions.yml@master

  lint:
    name: Lint 💅
    runs-on: ubuntu-latest
    # disabled till we fix the linting errors
    if: false
    needs: [versions]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ needs.versions.outputs.PNPM_VERSION }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.versions.outputs.NODE_VERSION }}
          cache: pnpm

      - name: Install
        run: pnpm install

      - name: Lint
        run: pnpm run lint

  type-check:
    name: Type Check 📝
    runs-on: ubuntu-latest
    # disabled till we fix the type errors
    if: false
    needs: [versions]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ needs.versions.outputs.PNPM_VERSION }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.versions.outputs.NODE_VERSION }}
          cache: pnpm

      - name: Install
        run: pnpm install

      - name: Type check
        run: pnpm run typecheck

  build:
    name: Build 🏗️
    runs-on: ubuntu-latest
    needs: [versions]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ needs.versions.outputs.PNPM_VERSION }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.versions.outputs.NODE_VERSION }}
          cache: pnpm

      - name: Install
        run: pnpm install

      - name: Build app
        run: pnpm run build:app

  test:
    name: Test 🧪
    runs-on: ubuntu-latest
    needs: [versions]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ needs.versions.outputs.PNPM_VERSION }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.versions.outputs.NODE_VERSION }}
          cache: pnpm

      - run: pnpm install
      - run: pnpm run test
      - name: 📊 Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: unitTests
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test-e2e:
    name: 🧪 E2E Tests 💻 | ${{ matrix.project }}
    timeout-minutes: 60
    runs-on: ${{ matrix.os }}
    needs: [versions]
    strategy:
      fail-fast: false
      matrix:
        include:
          - project: chromium
            os: ubuntu-latest
            cache_dir: ~/.cache/ms-playwright
          - project: firefox
            os: ubuntu-latest
            cache_dir: ~/.cache/ms-playwright
          - project: webkit
            os: macos-12
            cache_dir: ~/Library/Caches/ms-playwright
    env:
      VITE_APP_BASE_URL: http://127.0.0.1:8080
      TEST_APP_EMAIL: ${{ secrets.TEST_APP_EMAIL_DEV }}
      TEST_APP_PASSWORD: ${{ secrets.TEST_APP_PASSWORD_DEV }}
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: ${{ needs.versions.outputs.PNPM_VERSION }}

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.versions.outputs.NODE_VERSION }}
          cache: pnpm

      - name: 🔧 Setup Env Vars
        run: |
          echo "NODE_ENV=development" >> $GITHUB_ENV
          echo "VITE_APP_STAGE=development" >> $GITHUB_ENV
          echo "VITE_APP_BASE_URL=https://app.dev.crisiscleanup.io" >> $GITHUB_ENV
          echo "VITE_APP_API_BASE_URL=https://api.dev.crisiscleanup.io" >> $GITHUB_ENV
          echo "VITE_APP_WS_URL=wss://socket.dev.crisiscleanup.io" >> $GITHUB_ENV
          echo "VITE_APP_AWS_CCP_URL=https://ccudev.awsapps.com/connect/ccp-v2/" >> $GITHUB_ENV
          echo "VITE_APP_CCP_INSTANCE=87fbcad4-9f58-4153-84e8-d5b7202693e8" >> $GITHUB_ENV
          echo "VITE_APP_PORTAL_KEY=crisiscleanup_demo" >> $GITHUB_ENV
          echo "VITE_APP_PHONE_DEFAULT_USERNAME=english" >> $GITHUB_ENV
          echo "VITE_APP_PHONE_DEFAULT_PASSWORD=volunteer" >> $GITHUB_ENV
          echo "VITE_APP_ENGLISH_PHONE_GATEWAY=216961" >> $GITHUB_ENV
          echo "VITE_APP_SPANISH_PHONE_GATEWAY=216962" >> $GITHUB_ENV
          echo "VITE_APP_DEFAULT_CALLER_ID=2722003211" >> $GITHUB_ENV

      - name: Install dependencies
        run: pnpm install

      - name: 🔧 Set Playwright Version
        run: pnpm exec playwright --version > .github/.playwright-version

      - name: ⚡️ Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ${{ matrix.cache_dir }}
          key: ${{ runner.os }}-${{ matrix.project }}-pw-${{ hashFiles('**/.playwright-version') }}

      - name: 📥 Install ${{ matrix.project }} with Playwright
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm exec playwright install --with-deps ${{ matrix.project }}

      - name: 🏗️ Build App
        run: pnpm run build:app

      - name: 🎭 Playwright tests
        run: pnpm run test:e2e --project=${{ matrix.project }}
        env:
          DEBUG: pw:api,pw:browser*

      - name: 📊 Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
