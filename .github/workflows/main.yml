name: CrisisCleanup

on:
  workflow_dispatch:
  create:
  release:
    types: [published]
  pull_request:
    paths:
      - '*.json'
      - 'yarn.lock'
      - '**/**.js'
      - '**/**.vue'
      - '**/**.js.snap'
      - '.github/workflows/*'
  push:
    branches:
      - master
      - develop
    tags:
      - 'v**'
    paths:
      - '*.json'
      - 'yarn.lock'
      - '**/**.js'
      - '**/**.vue'
      - '**/**.js.snap'
      - '.github/workflows/*'
      - 'vue.config.js'

env:
  VUE_APP_WHAT_3_WORDS_API_KEY: ${{ secrets.VUE_APP_WHAT_3_WORDS_API_KEY }}
  VUE_APP_GOOGLE_MAPS_API_KEY: ${{ secrets.VUE_APP_GOOGLE_MAPS_API_KEY }}
  VUE_APP_PITNEYBOWES_API_KEY: ${{ secrets.VUE_APP_PITNEYBOWES_API_KEY }}
  VUE_APP_PITNEYBOWES_BASIC_AUTH_TOKEN: ${{ secrets.VUE_APP_PITNEYBOWES_BASIC_AUTH_TOKEN }}
  VUE_APP_PHONE_DEFAULT_USERNAME: 'covidtest'
  VUE_APP_PHONE_DEFAULT_PASSWORD: 'covidtest'
  VUE_APP_ENGLISH_PHONE_GATEWAY: '124906'
  VUE_APP_SPANISH_PHONE_GATEWAY: '124906'
  VUE_APP_DEFAULT_CALLER_ID: '2722003211'
  VUE_APP_API_BASE_URL: 'https://api.dev.crisiscleanup.io'
  VUE_APP_BASE_URL: 'https://app.dev.crisiscleanup.io'
  VUE_APP_WS_URL: 'wss://socket.dev.crisiscleanup.io'
  VUE_APP_PORTAL_KEY: 'crisiscleanup_demo'
  VUE_APP_AWS_CCP_REGION: 'us-east-1'
  VUE_APP_CCP_PRINCIPAL: 'arn:aws:iam::240937704012:saml-provider/ccudev'
  VUE_APP_CCP_ROLE: 'arn:aws:iam::240937704012:role/CCUDevConnectRole'
  VUE_APP_CCP_INSTANCE: 87fbcad4-9f58-4153-84e8-d5b7202693e8
  VUE_APP_AWS_CCP_URL: https://ccudev.awsapps.com/connect/ccp-v2/
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  SENTRY_PROPERTIES: sentry.properties
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  CI: 1
  CYPRESS_INSTALL_BINARY: 0

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Determine Yarn Cache
        id: yarn-cache-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Node Modules
        id: yarn-cache
        uses: actions/cache@v2.1.0
        with:
          path: ${{ steps.yarn-cache-path.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-

      - name: Install Dependencies
        run: yarn install

      - name: Run Tests
        run: yarn test:unit

      - name: Upload Coverage
        uses: coverallsapp/github-action@v1.1.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  lint:
    name: Run Linter
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Determine Yarn Cache
        id: yarn-cache-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Node Modules
        uses: actions/cache@v2.1.0
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-path.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-

      - name: Install Dependencies
        run: yarn install

      - name: Run Linter
        run: yarn lint

  deploy:
    name: Deploy Site
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: "github.event_name != 'pull_request'"
    steps:
      - uses: actions/checkout@v2

      - name: Create Sentry Release
        if: "github.event_name == 'release' || (github.event_name == 'create' && github.event.ref_type == 'tag')"
        uses: tclindner/sentry-releases-action@v1.1.1
        continue-on-error: true
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_PROPERTIES: sentry.properties
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        with:
          tagName: ${{ github.ref }}
          environment: ${{ steps.find-stage.outputs.stage }}
          releaseNamePrefix: crisiscleanup-3-web@

      - name: Invoke Development Deploy
        if: "github.event_name != 'pull_request' && github.ref == 'refs/heads/develop'"
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Deploy
          token: ${{ secrets.GHCR_PAT }}
          inputs: '{ "stage": "development" }'

      - name: Invoke Staging Deploy
        if: "github.event_name == 'create' && github.event.ref_type == 'tag'"
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Deploy
          token: ${{ secrets.GHCR_PAT }}
          inputs: '{ "stage": "staging" }'

      - name: Invoke Production Deploy
        if: "github.event_name == 'release'"
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Deploy
          token: ${{ secrets.GHCR_PAT }}
          inputs: '{ "stage": "production" }'

